The  cpio archive format collects any number of files, directories, and
other file system objects (symbolic links, device nodes, etc.) into a
single stream of bytes.


CPIO New ASCII Format

The  "new"  ASCII format	uses 8-byte hexadecimal	fields for all numbers
and separates device numbers into separate fields for major  and	 minor
numbers.

struct cpio_newc_header {
    char    c_magic[6];
    char    c_ino[8];
    char    c_mode[8];
    char    c_uid[8];
    char    c_gid[8];
    char    c_nlink[8];
    char    c_mtime[8];
    char    c_filesize[8];
    char    c_devmajor[8];
    char    c_devminor[8];
    char    c_rdevmajor[8];
    char    c_rdevminor[8];
    char    c_namesize[8];
    char    c_check[8];
};

Except  as  specified  below, the fields here match those specified for
the new binary format above.

magic   The string "070701".

check   This field is always set to zero by writers and ignored by
        readers. See the next section for more details.

The  pathname  is  followed  by NUL bytes so that the total size	of the
fixed header plus pathname is a multiple	of four.  Likewise,  the  file
data is padded to a multiple of four bytes.  Note that this format sup-
ports  only 4 gigabyte files (unlike the	older ASCII format, which sup-
ports 8 gigabyte	files).

In this format, hardlinked files	are handled by setting the filesize to
zero for	each entry except the first one	that appears in	the archive.

create a cpio archive:
    find . | cpio -o -H newc > ../initramfs.cpio